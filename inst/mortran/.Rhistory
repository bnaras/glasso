x <- "abcd
"
x
substring(x, 1, 2)
q()
source("process.R")
q()
source("process.R")
source("process.R")
source("process.R")
source("process.R")
?system
?system2
system2("./m77", stdin="glasso.m")
source("process.R")
source("process.R")
library(tools)
?file_path_sans_ext("/Users/naras/foo.R")
file_path_sans_ext("/Users/naras/foo.R")
file.path(file_path_sans_ext("/Users/naras/foo.R"), ".for")
dirname("/Users/naras/foo.R")
basename("/Users/naras/foo.R")
inputFile = "/Users/naras/foo.R"file.path(dirname(inputFile),
inputFile = "/Users/naras/foo.R"
file.path(dirname(inputFile),
                                                file_path_sans_ext(basename(inputFile)),
                                                ".f")
file.path(dirname(inputFile),
                                                
file_path_sans_ext(basename(inputFile)),                                                
                         outputFile = file.path(dirname(inputFile),
                                                paste0(file_path_sans_ext(basename(inputFile)),
".f"))
outputFile
inputFile = "glasso.m"
                         outputFile = file.path(dirname(inputFile),
                                                paste0(file_path_sans_ext(basename(inputFile)),
".f"))
outputFile
                         outputFile = paste0(file_path_sans_ext(basename(inputFile)), ".f")
outputFile
    system2(command = "gfortran", args = c("-Wall", "-c", outputFile), stdout = "gfortran.out")
    system2(command = "gfortran", args = c("-Wall", "-c", outputFile), stderr = "gfortran.out")
w <- readLines("gfortran.out")
w <- grep("^Warning: Label [0-9]+ at (1) defined but not used", value = TRUE)
w <- grep("^Warning: Label [0-9]+ at (1) defined but not used", w, value = TRUE)
w
w <- readLines("gfortran.out")
w <- grep("^Warning: Label [0-9]+ at \\(1\\) defined but not used", w, value = TRUE)
w
?str_match
phone
?str_extract
warnings
labels
?str_replace
?str_match
phones
phone
strings
line_numbers
label_warning_line_numbers
cbind(label_warning_line_numbers+1, line_numbers[-1])
line_numbers
label_warning_line_numbers
identical(label_warning_line_numbers[-nW] + 1, line_numbers[-1])
label_warning_line_numbers[-nW] + 1
line_numbers[-1]
sum(label_warning_line_numbers[-nW] + 1 - line_numbers[-1])
?gsub
code_lines
code_lines[label_warning_line_numbers[1]]
code_lines[line_numbers[1]]
line_numbers
warnings[line_numbers[1]]
str_extract(warnings[line_numbers[1]], pattern=":[0-9]+:")
str_extract(warnings[line_numbers[1]], pattern=":([0-9]+):")
str_extract(warnings[line_numbers[1]], pattern="([0-9]+)")
offending_line
i <- 1
        offending_line <- as.integer(str_extract(warnings[line_numbers[i]], pattern="([0-9]+)"))
offending_line
offending_label
str_pad("", width=nchar(offending_label))
q()
library(tools)
file_path_sans_ext("glasso.m.orig")
q()
source("process.R")
source("process.R")
source("process.R")
q()
